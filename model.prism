ctmc

const double DiskFR= 0.05;  // Annual Disk Failure Rate
const double dcFR= 0.0001;	// Annual Data Center Failure Rate
const double DiskRR=365;	// Annual Disk Recovery Rate, Can be weekly basis or daily basis [ 1W = 52.142857143 /1Day = 365]
const double dcRR=365;		// Annual Data Center Recovery Rate, Can be weekly basis or daily basis [ 1W = 52.142857143 /1Day = 365]

module SE1A1

	ss:[0..2] init 2;  // Data Center 3/4

	ss1:[0..4] init 4; // Disks 17/20

	//Failure cases:

	[fail1](ss=2 & ss1=4) -> 4*dcFR:(ss'=1) + 20*DiskFR:(ss1'=3);
	[fail2](ss=2 & ss1=3) -> 4*dcFR:(ss'=1) + 19*DiskFR:(ss1'=2);
	[fail3](ss=2 & ss1=2) -> 4*dcFR:(ss'=1) + 18*DiskFR:(ss1'=1);
	[fail4](ss=2 & ss1=1) -> 4*dcFR:(ss'=1) + 17*DiskFR:(ss1'=0);

	[fail5](ss=1 & ss1=4) -> 3*dcFR:(ss'=0) + 20*DiskFR:(ss1'=3);
	[fail6](ss=1 & ss1=3) -> 3*dcFR:(ss'=0) + 19*DiskFR:(ss1'=2);
	[fail7](ss=1 & ss1=2) -> 3*dcFR:(ss'=0) + 18*DiskFR:(ss1'=1);
	[fail8](ss=1 & ss1=1) -> 3*dcFR:(ss'=0) + 17*DiskFR:(ss1'=0);
	
	[fail9](ss=2 & ss1>0) -> 1*dcFR:(ss1'=0);
	[fail10](ss=1 & ss1>0) -> 1*dcFR:(ss1'=0);
	
	//Repair cases:
	
	[repair1](ss=2 & ss1=3) -> 1*DiskRR:(ss1'=4);
	[repair2](ss=2 & ss1=2) -> 2*DiskRR:(ss1'=3);
	[repair3](ss=2 & ss1=1) -> 3*DiskRR:(ss1'=2);

	[repair4](ss=1 & ss1=4) -> 1*dcRR:(ss'=2);
	[repair5](ss=1 & ss1=3) -> 1*dcRR:(ss'=2) + 1*DiskRR:(ss1'=4);
	[repair6](ss=1 & ss1=2) -> 1*dcRR:(ss'=2) + 2*DiskRR:(ss1'=3);
	[repair7](ss=1 & ss1=1) -> 1*dcRR:(ss'=2) + 3*DiskRR:(ss1'=2);

endmodule

